- name: "Get the name of the service instance"
  shell: oc get serviceinstance --namespace={{ namespace }} -o jsonpath='{.items[?(@.spec.externalID=="{{ _apb_service_instance_id }}")].metadata.name}'
  when: _apb_service_instance_id is defined
  register: service_instance_name

- name: "Label the service instance with the service name"
  shell: oc label serviceinstance '{{ service_instance_name.stdout }}' serviceName=fh-sync-server --namespace={{ namespace }}
  when: _apb_service_instance_id is defined

- name: "Label the service instance with mobile enabled"
  shell: oc label serviceinstance '{{ service_instance_name.stdout }}' mobile=enabled --namespace={{ namespace }}
  when: _apb_service_instance_id is defined  

- name: "Create fh-sync-server deploy yaml file"
  template:
    src: deploy.yml.j2
    dest: /tmp/deploy.yaml

- name: "Create fh-sync-server resources"
  shell: "oc new-app -f /tmp/deploy.yaml -n {{ namespace }}"
  
- name: "Retrieve route to fh-sync-server"
  shell: "oc get routes fh-sync-server -n {{ namespace }} | grep -v NAME | awk '{print $2}'"
  register: fhsync_route

- k8s_v1_secret:
    name: fh-sync-server
    namespace: '{{ namespace }}'
    labels:
      mobile: enabled
      serviceName: fh-sync-server
    string_data:
      name: "{{ fhsync_secret_name }}"
      type: "{{ fhsync_secret_name }}"
      uri: https://{{ fhsync_route.stdout }}

- k8s_v1_config_map:
    name: fh-sync-server
    namespace: '{{ namespace }}'
    labels:
      mobile: enabled
      serviceName: fh-sync-server
    data:
      name: "{{ fhsync_secret_name }}"
      type: "{{ fhsync_secret_name }}"
      uri: https://{{ fhsync_route.stdout }}
